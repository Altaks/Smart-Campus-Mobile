# Define global cache key
variables:
  CACHE_KEY: "$CI_JOB_NAME"

stages:
  - SecurityChecker
  - CodingStandards
  - UnitTesting
  - Documentation

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == "dev" || ($CI_PIPELINE_SOURCE == 'merge_request_event' && ( $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "dev" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main" ))

security-checker:
  image: jakzal/phpqa
  tags:
    - docker
  stage: SecurityChecker
  script:
    - cd sae4api
    - composer install
    - local-php-security-checker  --path=./composer.lock
  allow_failure: true
  cache:
    key: "$CACHE_KEY"
    paths:
      - sae4api/vendor/

eslint:
  image: node:20.11.1
  stage: CodingStandards
  tags:
    - docker
  script:
    - cd sae4app
    - pwd
    - apt update -y
    - npm install -g npm@latest
    - npm install eslint-plugin-react@latest eslint-plugin-react-hooks@latest --save-dev
    - npx eslint -o eslint-report.html
    - pwd
    - ls -l
    - ls -l ../
  allow_failure: true
  artifacts:
    name: "$CI_JOB_NAME"
    paths:
      - sae4app/eslint-report.html
  cache:
    key: "$CACHE_KEY"
    paths:
      - sae4app/node_modules/

phpcs:
  image: jakzal/phpqa
  tags:
    - docker
  stage: CodingStandards
  script:
    - cd sae4api
    - composer install
    - phpcs -v --standard=PSR12 --ignore=./src/Kernel.php ./src
  allow_failure: false
  cache:
    key: "$CACHE_KEY"
    paths:
      - sae4api/vendor/

phpstan:
  image: jakzal/phpqa
  tags:
    - docker
  stage: CodingStandards
  script:
    - cd sae4api
    - composer install
    - phpstan analyse ./src
  allow_failure: false
  cache:
    key: "$CACHE_KEY"
    paths:
      - sae4api/vendor/

vitest:
  image: node:20.11.1
  stage: UnitTesting
  tags:
    - docker
  script:
    - cd sae4app
    - pwd
    - apt update -y
    - npm install -g npm@latest
    - npm install
    - npm run lint
    - npx vitest --run --coverage
  allow_failure: true
  artifacts:
    name: "$CI_JOB_NAME"
    paths:
      - sae4app/coverage
  cache:
    key: "$CACHE_KEY"
    paths:
      - sae4app/node_modules/

jsdoc:
  image: node:20.11.1
  stage: Documentation
  tags:
    - docker
  script:
    - cd sae4app
    - pwd
    - apt update -y
    - npm install -g npm@latest
    - npm install 
    - npm install jsdoc
    - npx jsdoc src -r -d docs || true
  allow_failure: true
  artifacts:
    name: "$CI_JOB_NAME"
    paths:
      - sae4app/docs
  cache:
    key: "$CACHE_KEY"
    paths:
      - sae4app/node_modules/

doxygen:
  image: ubuntu:focal
  stage: Documentation
  tags:
    - docker
  script:
    - cd software
    - pwd
    - apt update -y
    - apt install -y graphviz doxygen 
    - doxygen
    - touch ./doc/index.html
    - echo "<meta http-equiv=\"refresh\" content=\"0; url=html/index.html\" />" > ./doc/index.html
  allow_failure: true
  artifacts:
    when: on_success
    name: "$CI_JOB_NAME"
    paths:
      - "software/doc"
